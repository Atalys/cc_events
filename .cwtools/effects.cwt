alias[effect:create_starbase] = {
    ## cardinality = 1..1
    owner = scalar

    ## cardinality = 1..1
    size = scalar

    ## cardinality = 0..100
    module = scalar

    ## cardinality = 0..100
    building = scalar

    ## cardinality = 0..1
    effect = effect
}

alias[effect:THIS] = { alias_name[effect] = alias_match_left[effect] }
alias[effect:ROOT] = { alias_name[effect] = alias_match_left[effect] }
alias[effect:PREV] = { alias_name[effect] = alias_match_left[effect] }
alias[effect:PREVPREV] = { alias_name[effect] = alias_match_left[effect] }
alias[effect:PREVPREVPREV] = { alias_name[effect] = alias_match_left[effect] }
alias[effect:PREVPREVPREVPREV] = { alias_name[effect] = alias_match_left[effect] }
alias[effect:FROM] = { alias_name[effect] = alias_match_left[effect] }
alias[effect:FROMFROM] = { alias_name[effect] = alias_match_left[effect] }
alias[effect:FROMFROMFROM] = { alias_name[effect] = alias_match_left[effect] }
alias[effect:FROMFROMFROMFROM] = { alias_name[effect] = alias_match_left[effect] }

alias[effect:hidden_effect] = { alias_name[effect] = alias_match_left[effect] }



alias[effect:if] = {
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:else_if] = {
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:else] = { alias_name[effect] = alias_match_left[effect] }

alias[effect:save_event_target_as] = scalar

alias[effect:event] = {
    id = scalar
    ## cardinality = 0..1
    days = int
    ## cardinality = 0..1
    random = int
}

alias[effect:ship_event] = {
    id = scalar
    ## cardinality = 0..1
    days = int
    ## cardinality = 0..1
    random = int
}

alias[effect:country_event] = {
    id = scalar
    ## cardinality = 0..1
    days = int
    ## cardinality = 0..1
    random = int
}

alias[effect:pop_faction_event] = {
    id = scalar
    ## cardinality = 0..1
    days = int
    ## cardinality = 0..1
    random = int
}

alias[effect:pop_event] = {
    id = scalar
    ## cardinality = 0..1
    days = int
    ## cardinality = 0..1
    random = int
}

alias[effect:fleet_event] = {
    id = scalar
    ## cardinality = 0..1
    days = int
    ## cardinality = 0..1
    random = int
}

alias[effect:planet_event] = {
    id = scalar
    ## cardinality = 0..1
    days = int
    ## cardinality = 0..1
    random = int
}

#Scopes

alias[effect:species] = {
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:planet] = {
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:owner] = {
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:controller] = {
    alias_name[effect] = alias_match_left[effect]
}

### Executes enclosed effects on a random leader owned by scoped country that meets the limit criteria
alias[effect:every_owned_leader] = {
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:random_owned_leader] = {
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:every_pop_faction] = {
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:random_pop_faction] = {
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:every_owned_pop] = {
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:random_owned_pop] = {
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:every_pop] = {
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:random_pop] = {
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:every_relation] = {
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:random_relation] = {
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:every_country] = {
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:random_country] = {
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:every_owned_planet] = {
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:random_owned_planet] = {
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:every_playable_country] = {
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:random_playable_country] = {
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:every_system_in_cluster] = {
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:observation_outpost_owner] = {
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:every_planet_within_border] = {
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:random_planet_within_border] = {
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:every_mining_station] = {
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:random_mining_station] = {
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:every_research_station] = {
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:random_research_station] = {
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

#there is no evidence that limit works on these two
alias[effect:every_subject] = {
    alias_name[effect] = alias_match_left[effect]
}
alias[effect:random_subject] = {
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:every_owned_fleet] = {
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:random_owned_fleet] = {
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:every_neighbor_system] = {
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:random_neighbor_system] = {
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:every_fleet_in_system] = {
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:random_fleet_in_system] = {
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:random_ambient_object] = {
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:random_system_ambient_object] = {
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:every_ambient_object] = {
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:every_system_ambient_object] = {
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:random_sector] = {
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:every_sector] = {
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:every_rim_system] = {
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:random_rim_system] = {
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:random_moon] = {
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:every_moon] = {
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:every_tile] = {
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:random_tile] = {
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:every_neighboring_tile] = {
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:random_neighboring_tile] = {
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:every_system_planet] = {
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:random_system_planet] = {
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:every_ship] = {
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:every_planet] = {
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:random_planet] = {
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:every_owned_ship] = {
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:random_owned_ship] = {
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:every_controlled_planet] = {
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:random_controlled_planet] = {
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}


alias[effect:closest_system] = {
	##cardinality = 0..1
	min_steps = int
	##cardinality = 0..1
	max_steps = int
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}


#enemy should be a target scope. If these scopes exist at all
alias[effect:every_war_defender] = {
	enemy = scalar
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}

alias[effect:random_war_defender] = {
	enemy = scalar
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}
alias[effect:every_war_attacker] = {
	enemy = scalar
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}
alias[effect:random_war_attacker] = {
	enemy = scalar
	##cardinality = 0..1
    limit = { alias_name[trigger] = alias_match_left[trigger] }
    alias_name[effect] = alias_match_left[effect]
}



alias[effect:add_modifier] = {
    modifier = <static_modifier>
    ##cardinality = 0..1
    years = int
    ##cardinality = 0..1
    months = int
    ##cardinality = 0..1
    days = int
}



alias[effect:custom_tooltip] = scalar

alias[effect:add_opinion_modifier] = {
    who = scalar
    modifier = <opinion_modifier>
}


alias[effect:remove_modifier] = <static_modifier>


#flags
alias[effect:set_country_flag] = scalar
alias[effect:set_planet_flag] = scalar
alias[effect:set_pop_facton_flag] = scalar
alias[effect:set_star_flag] = scalar
alias[effect:set_species_flag] = scalar
alias[effect:set_pop_flag] = scalar
alias[effect:set_fleet_flag] = scalar
alias[effect:set_ship_flag] = scalar
alias[effect:set_global_flag] = scalar
alias[effect:set_leader_flag] = scalar
alias[effect:set_ambient_object_flag] = scalar
alias[effect:set_megastructure_flag] = scalar

#Ideally should be years or months or days for all these
alias[effect:set_timed_country_flag] = {
    flag = scalar
    ##cardinality = 0..1
    years = int
    ##cardinality = 0..1
    months = int
    ##cardinality = 0..1
    days = int
}
alias[effect:set_timed_planet_flag] = {
    flag = scalar
    ##cardinality = 0..1
    years = int
    ##cardinality = 0..1
    months = int
    ##cardinality = 0..1
    days = int
}
alias[effect:set_timed_pop_faction_flag] = {
    flag = scalar
    ##cardinality = 0..1
    years = int
    ##cardinality = 0..1
    months = int
    ##cardinality = 0..1
    days = int
}

alias[effect:set_timed_star_flag] = {
    flag = scalar
    ##cardinality = 0..1
    years = int
    ##cardinality = 0..1
    months = int
    ##cardinality = 0..1
    days = int
}
alias[effect:set_timed_species_flag] = {
    flag = scalar
    ##cardinality = 0..1
    years = int
    ##cardinality = 0..1
    months = int
    ##cardinality = 0..1
    days = int
}
alias[effect:set_timed_pop_flag] = {
    flag = scalar
    ##cardinality = 0..1
    years = int
    ##cardinality = 0..1
    months = int
    ##cardinality = 0..1
    days = int
}
alias[effect:set_timed_fleet_flag] = {
    flag = scalar
    ##cardinality = 0..1
    years = int
    ##cardinality = 0..1
    months = int
    ##cardinality = 0..1
    days = int
}
alias[effect:set_timed_ship_flag] = {
    flag = scalar
    ##cardinality = 0..1
    years = int
    ##cardinality = 0..1
    months = int
    ##cardinality = 0..1
    days = int
}
alias[effect:set_timed_global_flag] = {
    flag = scalar
    ##cardinality = 0..1
    years = int
    ##cardinality = 0..1
    months = int
    ##cardinality = 0..1
    days = int
}
alias[effect:set_timed_leader_flag] = {
    flag = scalar
    ##cardinality = 0..1
    years = int
    ##cardinality = 0..1
    months = int
    ##cardinality = 0..1
    days = int
}
alias[effect:set_timed_ambient_object_flag] = {
    flag = scalar
    ##cardinality = 0..1
    years = int
    ##cardinality = 0..1
    months = int
    ##cardinality = 0..1
    days = int
}
alias[effect:set_timed_megastructure_flag] = {
    flag = scalar
    ##cardinality = 0..1
    years = int
    ##cardinality = 0..1
    months = int
    ##cardinality = 0..1
    days = int
}



#missing who = scope
alias[effect:set_relation_flag] = {
    who = scalar
    flag = scalar
}

#missing who = scope
alias[effect:set_timed_relation_flag] = {
    who = scalar
    flag = scalar
    ##cardinality = 0..1
    years = int
    ##cardinality = 0..1
    months = int
    ##cardinality = 0..1
    days = int
}

#missing who = scope
alias[effect:remove_relation_flag] = {
    who = scalar
    flag = scalar
}

#doesn't currently work
#alias[effect:change_government] = {
#    ##cardinality = 0..1
#    authority = random
#    ##cardinality = 0..1
#    authority = <authority>
#    ##cardinality = 0..1
#    civics = random
#    ##cardinality = 0..1
#    civics = {
#		##cardinality = 0..3
#		<civic>
#	}
#}


#ideally, "heir" should only be if type = ruler
alias[effect:kill_leader] = {
    ##cardinality = 0..1
    type = enum[leader_classes]
	show_notification = bool
    ##cardinality = 0..1
    heir = bool
}

alias[effect:shift_ethic] = <ethos>

alias[effect:kill_pop] = yes
alias[effect:enslave_pop] = bool
alias[effect:destroy_colony] = yes


alias[effect:random_list] = {
    int = { 
		##cardinality = 0..100
        alias_name[modifier_rule] = alias_match_left[modifier_rule]
        alias_name[effect] = alias_match_left[effect]
    }
}